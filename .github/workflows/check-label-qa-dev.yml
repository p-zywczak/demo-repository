name: Check QA Dev Label Before Merge to Main

on:
  pull_request:
    types: [labeled, unlabeled, synchronize, opened, ready_for_review]

jobs:
  check-label:
    runs-on: ubuntu-latest

    steps:
    - name: Check if PR is targeted to main and has QA Dev label
      uses: actions/github-script@v6
      with:
        script: |
          const prLabels = context.payload.pull_request.labels;

          const hasDocumentationLabel = prLabels.some(label => label.name === 'DOCUMENTATION' || label.name === 'NOT DOCUMENTATION');
          if (!hasDocumentationLabel) {
            core.setFailed('PR musi mieć etykietę DOCUMENTATION lub NOT DOCUMENTATION.');
          }

          const requiredLabels = ['QA Dev', 'CR1', 'CR2'];

          requiredLabels.forEach(label => {
            const hasLabel = prLabels.some(prLabel => prLabel.name === label);

            if (!hasLabel) {
              core.setFailed(`PR nie ma wymaganej etykiety ${label}.`);
            }
          });

          const { owner, repo } = context.repo;
          const prNumber = context.payload.pull_request.number;

          // Pobranie listy wydarzeń związanych z PR
          const events = await github.rest.issues.listEventsForTimeline({
            owner,
            repo,
            issue_number: prNumber,
          });
          events.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));

          requiredLabels.forEach(label => {
            const labelAddEvent = events.data.find(event => {
              if (event.event === 'labeled' && event.label.name === label && event.actor) {
                console.log('Event actor login:', event.actor.login); // Debugowanie
                console.log('Context actor:', context.actor); // Debugowanie
                return event.actor.login === context.actor;
              }
                return false;
              });
            const labelRemoveEvent = events.data.find(event => event.event === 'unlabeled' && event.label.name === label && event.actor.login === context.actor);
            console.log('label', labelAddEvent.actor.login);
            console.log('context', context.payload.pull_request.user.login);
            if (labelAddEvent && labelAddEvent.actor.login === context.payload.pull_request.user.login) {
              if (!labelRemoveEvent || labelAddEvent.created_at > labelRemoveEvent.created_at) {
                core.setFailed(`Nie można samemu sobie nadać labelki ${label}.`);
              }
            }
          });
