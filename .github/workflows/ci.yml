name: DEVELOP-WORKFLOW

on:
  pull_request:
    types: [edited ,labeled, unlabeled, opened, synchronize]
  push:
    branches:
      - develop
  issue_comment:
    types: [created]
    
permissions: write-all
  
jobs:
  jira_review_status_updater:
    name: 'Change jira task status after CR done'
    if: github.event_name == 'pull_request' && (github.event.action == 'labeled' || github.event.action == 'unlabeled')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Jira manager - Code review done status updater
        uses: ./.github/actions/jira-manager
        with:
          jira_email: ${{ secrets.JIRA_EMAIL }}
          jira_token: ${{ secrets.JIRA_TOKEN }}
          jira_url: ${{ secrets.JIRA_URL }}
          jira_project_id: ${{ secrets.JIRA_PROJECT_ID }}
          jira_id_code_review_done: ${{ vars.JIRA_ID_CODE_REVIEW_DONE }}
          jira_id_code_review: ${{ vars.JIRA_ID_CODE_REVIEW }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          required_labels: '["CR1", "APPROVAL"]'
          type: 'codeReviewDoneStatusUpdater'

  deploy_to_dev:
    name: 'Deploy to dev server'
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to develop server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/test/demo-repository
            git checkout ${{ secrets.MAIN_BRANCH }}
            git pull
            composer install --ignore-platform-req=ext-xdebug --ignore-platform-req=ext-ldap
            php artisan migrate
            php artisan config:clear

      - name: Jira manager - Awaiting to release status updater
        uses: ./.github/actions/jira-manager
        with:
          jira_email: ${{ secrets.JIRA_EMAIL }}
          jira_token: ${{ secrets.JIRA_TOKEN }}
          jira_url: ${{ secrets.JIRA_URL }}
          jira_id_code_review: ${{ vars.JIRA_ID_AWAITING_TO_RELEASE }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_ref: ${{ github.ref_name }}
          type: 'awaitingToReleaseStatusUpdater'

  notification:
    name: 'Notification teams'
    if: github.event_name == 'issue_comment' && github.event.comment.body == '/ping'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK_PR }}
          raw: >-
            {
              "type": "message",
              "attachments":
                [
                  {
                    "contentType": "application/vnd.microsoft.card.adaptive",
                    "content":
                      {
                        "type": "AdaptiveCard",
                        "version": "1.5",
                        "body":
                          [
                            {
                              "type": "ColumnSet",
                              "columns": [
                                {
                                  "type": "Column",
                                  "width": "stretch",
                                  "items": [
                                    {
                                      "type": "TextBlock",
                                      "text": "${{ steps.get_pr.outputs.title }}",
                                      "weight": "Bolder",
                                      "size": "Large",
                                      "color": "Accent"
                                    }
                                  ]
                                },
                                {
                                  "type": "Column",
                                  "width": "auto",
                                  "items": [
                                    {
                                      "type": "Image",
                                      "url": "https://img.icons8.com/?size=100&id=33282&format=png&color=000000",
                                      "size": "Small",
                                      "horizontalAlignment": "Right",
                                      "altText": "Zielona Fajka"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "TextBlock",
                              "text": "Prośba o CR: [Link do PR](${{ steps.get_pr.outputs.html_url }})",
                              "wrap": true,
                              "size": "Medium"
                            },
                            {
                              "type": "TextBlock",
                              "text": "Twórca PR: ${{ steps.get_pr.outputs.user_login }}",
                              "wrap": true,
                              "size": "Medium"
                            }
                          ],
                      "msteams": {
                          "width": "Full"
                      },
                        "actions": []
                      }
                  }
                ]
            }

      - name: Jira manager - Code review status updater
        uses: ./.github/actions/jira-manager
        with:
          jira_email: ${{ secrets.JIRA_EMAIL }}
          jira_token: ${{ secrets.JIRA_TOKEN }}
          jira_url: ${{ secrets.JIRA_URL }}
          jira_id_code_review: ${{ vars.JIRA_ID_CODE_REVIEW }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_ref: ${{ github.ref_name }}
          type: 'codeReviewStatusUpdater'

  quality_checks:
    name: 'Quality checks'
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'pull_request' &&
        github.event.pull_request.base.ref == 'develop' &&
        github.event.pull_request.head.ref != 'main')
      ||
      (github.event_name == 'pull_request' &&
        github.event.pull_request.base.ref == 'main' &&
        startsWith(github.event.pull_request.head.ref, 'hotfix/'))
      ||
      (github.event_name == 'pull_request' &&
        startsWith(github.event.pull_request.base.ref, 'release/'))
        
    steps:
      - uses: actions/checkout@v2
            
      - name: Manger Labels
        uses: ./.github/actions/manager-labels
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          required_labels: '["CR1", "APPROVAL"]'
          skip_labels_check: '["DO MERGE"]'


      - name: Assign PR creator
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const prCreator = context.payload.pull_request.user.login;
            
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              assignees: [prCreator]
            });

      - name: Checkout repository
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3

      - name: Set up PHP
        if: github.event_name == 'pull_request'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer

      - name: Install dependencies via Composer
        if: github.event_name == 'pull_request'
        run: composer install

      - name: Run cs fixer
        if: github.event_name == 'pull_request'
        run: composer run-script lint
        
      - name: Run Migrations for Testing
        run: php artisan migrate --env=testing
          
      - name: Run GrumPHP
        if: github.event_name == 'pull_request'
        run: |
          vendor/bin/grumphp run

      - name: Deploy to Server Dev and Pre
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/test/demo-repository
            git checkout ${{ secrets.MAIN_BRANCH }}
            git pull
            composer install --ignore-platform-req=ext-xdebug --ignore-platform-req=ext-ldap
            php artisan migrate
            php artisan config:clear

