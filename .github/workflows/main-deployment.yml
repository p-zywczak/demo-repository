name: Main Deployment

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-tag:
    name: Create Tag on Main and deploy to Prod
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'release/') || contains(github.event.head_commit.message, 'hotfix/')
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Extract Version from Commit Message
        id: extract_version
        run: |
          VERSION=$(git log -1 --pretty=%B | grep -oP '(release|hotfix)/\K[0-9]+\.[0-9]+(\.[0-9]+)?' | head -n 1 | tr -d '[:space:]')
          if [ -z "$VERSION" ]; then
          echo "Version not found in commit message."
          exit 1
          fi
          echo "VER=$VERSION" >> $GITHUB_ENV

      - name: Create Tag on Main
        run: |
          git tag "v${VER}"
          git push origin "v${VER}"

      - name: Hotfix merge to develop
        if: contains(github.event.head_commit.message, 'hotfix/')
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout develop
          git pull origin develop
          git merge main --no-ff -m "Merge main into develop after hotfix v${{ env.VER }}"
          git push origin develop

      - name: Deploy to Prod Server via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/test/demo-repository-2
            git fetch --tags
            git checkout main
            git pull
            git checkout "v${{ env.VER }}"
            composer install
            php artisan migrate
            php artisan config:clear

      - name: Generate Changelog
        id: generate_changelog
        run: |
          # Pobierz ostatni tag
          LAST_TAG=$(git describe --tags --abbrev=0)
          
          # Pobierz commit messages między ostatnim tagiem a obecnym commitem
          CHANGELOG=$(git log ${LAST_TAG}..HEAD --pretty=format:"• %s")
          
          # Sprawdź, czy changelog nie jest pusty
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="• Brak zmian."
          fi
          
          # Eksportuj changelog jako zmienną środowiskową
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
            webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
            raw: >-
              {
                "type": "message",
                "attachments":
                  [
                    {
                      "contentType": "application/vnd.microsoft.card.adaptive",
                      "content":
                        {
                          "type": "AdaptiveCard",
                          "version": "1.2",
                          "body":
                            [
                              {
                                "type": "ColumnSet",
                                "columns": [
                                  {
                                    "type": "Column",
                                    "width": "stretch",
                                    "items": [
                                      {
                                        "type": "TextBlock",
                                        "text": "${{ vars.ENVIRONMENT }} Release v${{ env.VER }}",
                                        "weight": "Bolder",
                                        "size": "Large",
                                        "color": "Good"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "Column",
                                    "width": "auto",
                                    "items": [
                                      {
                                        "type": "Image",
                                        "url": "https://img.icons8.com/color/48/000000/checked--v1.png",
                                        "size": "Small",
                                        "horizontalAlignment": "Right",
                                        "altText": "Zielona Fajka"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "TextBlock",
                                "text": "Najnowsza wersja v${{ env.VER }} została wdrożona na serwery DEMO oraz PROD.",
                                "wrap": true,
                                "size": "Medium"
                              },
                              {
                                "type": "TextBlock",
                                "text": "Data i czas release: $(date -u +"%Y-%m-%d %H:%M:%S UTC")",
                                "wrap": true,
                                "size": "Small",
                                "color": "Accent"
                              },
                              {
                                  "type": "ActionSet",
                                  "actions": [
                                      {
                                          "type": "Action.ToggleVisibility",
                                          "title": "Changelog",
                                          "targetElements": ["changelogContainer"]
                                      }
                                  ]
                              },
                              {
                                  "type": "Container",
                                  "id": "changelogContainer",
                                  "isVisible": false,
                                  "items": [
                                      {
                                          "type": "TextBlock",
                                          "text": "Changelog:",
                                          "weight": "Bolder",
                                          "size": "Medium"
                                      },
                                      {
                                          "type": "TextBlock",
                                          "text": "${{ env.CHANGELOG }}",
                                          "wrap": true
                                      }
                                  ]
                              }
                            ],
                          "actions": []
                        }
                    }
                  ]
              }