name: Main Deployment

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-tag:
    name: Create Tag on Main and deploy to Prod
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'release/') || contains(github.event.head_commit.message, 'hotfix/')
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Generate Timestamp for Tag
        id: generate_timestamp
        run: |
          TIMESTAMP=$(date +"%m-%d-%Y %H:%M:%S")
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: Create Tag on Main
        run: |
          git tag "release-${TIMESTAMP}"
          git push origin "release-${TIMESTAMP}"

      - name: Get current date
        id: get_date
        run: |
          TZ="Europe/Warsaw" date "+RELEASE_DATE=%Y-%m-%d %H:%M:%S %Z" >> $GITHUB_ENV

      - name: Generate Changelog
        id: generate_changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0)
          
          CHANGELOG=$(git log ${LAST_TAG}..HEAD --pretty=format:"• %s")
          
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="• Brak zmian."
          fi
          
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Hotfix merge to develop
        if: contains(github.event.head_commit.message, 'hotfix/')
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout develop
          git pull origin develop
          git merge main --no-ff -m "Merge main into develop after hotfix v${{ env.VER }}"
          git push origin develop
